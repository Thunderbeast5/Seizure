rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profiles - users can read/write their own, doctors can read any profile for search
    match /profiles/{profileId} {
      allow read, write: if request.auth != null && request.auth.uid == profileId;
      allow create: if request.auth != null && request.auth.uid == profileId;
      // Doctors can read any profile for search purposes (this allows patient discovery)
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid));
      // Doctors can update profiles they're assigned to OR when accepting a connection request
      allow update: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        (resource.data.doctorId == request.auth.uid || 
         request.resource.data.doctorId == request.auth.uid);
    }

    // Doctors - anyone can read, only doctors can write their own
    match /doctors/{doctorId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == doctorId;
      allow create: if request.auth != null && request.auth.uid == doctorId;
    }

    // Seizures - users can read/write their own, doctors can read/write assigned patients
    match /seizures/{seizureId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Doctors can read/write seizures of patients assigned to them
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        exists(/databases/$(database)/documents/profiles/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/profiles/$(resource.data.userId)).data.doctorId == request.auth.uid;
      // Doctors can create seizures for assigned patients
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        exists(/databases/$(database)/documents/profiles/$(request.resource.data.userId)) &&
        get(/databases/$(database)/documents/profiles/$(request.resource.data.userId)).data.doctorId == request.auth.uid;
    }

    // Medications - users can read/write their own, doctors can read/write assigned patients
    match /medications/{medicationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Doctors can read/write medications of patients assigned to them
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        exists(/databases/$(database)/documents/profiles/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/profiles/$(resource.data.userId)).data.doctorId == request.auth.uid;
      // Doctors can create medications for assigned patients
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        exists(/databases/$(database)/documents/profiles/$(request.resource.data.userId)) &&
        get(/databases/$(database)/documents/profiles/$(request.resource.data.userId)).data.doctorId == request.auth.uid;
    }

    // Patient connections - patients can read their own, doctors can read their own
    match /patientConnections/{connectionId} {
      allow read: if request.auth != null && (
        resource.data.patientId == request.auth.uid ||
        resource.data.doctorId == request.auth.uid
      );
      allow create: if request.auth != null && 
        request.resource.data.doctorId == request.auth.uid;
      allow update: if request.auth != null && (
        resource.data.patientId == request.auth.uid ||
        resource.data.doctorId == request.auth.uid
      );
      allow delete: if request.auth != null && (
        resource.data.patientId == request.auth.uid ||
        resource.data.doctorId == request.auth.uid
      );
    }

    // Emergency contacts - users can read/write their own
    match /emergencyContacts/{contactId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Emergency alerts - users can read/write their own, doctors can read all alerts
    match /emergencyAlerts/{alertId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Doctors can read all emergency alerts (simplified for emergency situations)
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid));
    }

    // Emergency notifications - allow creation by anyone, doctors can read all
    match /emergencyNotifications/{notificationId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      // Allow patients to create emergency notifications for their doctors
      allow write: if request.auth != null;
    }

    // Patient notifications - patients can read their own, doctors can create for their patients
    match /patientNotifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.patientId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.patientId;
      // Doctors can create notifications for their patients
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid));
      // Doctors can read notifications they created
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        resource.data.doctorId == request.auth.uid;
    }

    // Chat conversations - simplified rules for testing
    match /chats/{chatId} {
      allow read, write, create: if request.auth != null;
      
      // Messages within a chat
      match /messages/{messageId} {
        allow read, write, create: if request.auth != null;
      }
    }

    // Allow users to create documents (for initial user creation)
    match /{document=**} {
      allow create: if request.auth != null;
    }
  }
}